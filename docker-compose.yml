# Minimal Docker Compose for Egfilm Main Site
# Only essential services: PostgreSQL database and main streaming app
# Removed: Redis, BullMQ worker, admin panel, background jobs

services:
  # PostgreSQL Database - Essential for user data and movie metadata
  postgres:
    image: postgres:16-alpine
    container_name: egfilm-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-egfilm_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-anihortes}
      POSTGRES_DB: ${POSTGRES_DB:-egfilm-database}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-egfilm_admin} -d ${POSTGRES_DB:-egfilm-database}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - app-network
    # Optimized resource limits for minimal VPS
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "2"

  # Main Egfilm Streaming Application
  app:
    image: ${IMAGE_NAME:-ghcr.io/bibektimilsina00/egfilm:deploy}
    container_name: egfilm-app
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${PORT:-8000}:8000"
    env_file:
      - .env
    environment:
      # Database connection
      DATABASE_URL: ${DATABASE_URL}
      # TMDB API for movie/TV data
      TMDB_API_KEY: ${NEXT_PUBLIC_TMDB_API_KEY}
      NEXT_PUBLIC_TMDB_API_KEY: ${NEXT_PUBLIC_TMDB_API_KEY}
      # Authentication
      AUTH_SECRET: ${AUTH_SECRET}
      AUTH_URL: ${AUTH_URL:-http://localhost:8000}
      # App configuration
      NEXT_PUBLIC_APP_NAME: ${NEXT_PUBLIC_APP_NAME:-Egfilm}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL:-http://localhost:8000}
      # Analytics (optional)
      NEXT_PUBLIC_UMAMI_WEBSITE_ID: ${NEXT_PUBLIC_UMAMI_WEBSITE_ID}
      NEXT_PUBLIC_UMAMI_SCRIPT_URL: ${NEXT_PUBLIC_UMAMI_SCRIPT_URL}
      # Production optimizations
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
      # Remove Redis-related variables since we're not using it
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://localhost:8000/api/health || exit 1"]
      interval: 60s
      timeout: 15s
      retries: 3
      start_period: 90s
    networks:
      - app-network
    labels:
      - "com.egfilm.service=streaming-app"
      - "com.egfilm.environment=production"
    # Optimized resource limits for main app on minimal VPS
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 1G
        reservations:
          cpus: '0.4'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "3"
    init: true

# Simplified volumes - only what's essential
volumes:
  postgres_data:
    name: egfilm_postgres_data
    driver: local

# Minimal network configuration
networks:
  app-network:
    name: egfilm-network
    driver: bridge

