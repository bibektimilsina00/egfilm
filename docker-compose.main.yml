# Docker Compose for Egfilm Main Streaming App
# Pure streaming functionality - movies, TV shows, watch together
# Optimized for lightweight deployment

services:
  # PostgreSQL Database (shared)
  postgres:
    image: postgres:16-alpine
    container_name: egfilm-main-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-egfilm_admin}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-anihortes}
      POSTGRES_DB: ${POSTGRES_DB:-egfilm-database}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-egfilm_admin} -d ${POSTGRES_DB:-egfilm-database}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - main-network
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M

  # Main Streaming App
  main-app:
    build:
      context: .
      dockerfile: Dockerfile.main
    container_name: egfilm-main-app
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - NEXT_PUBLIC_TMDB_API_KEY=${NEXT_PUBLIC_TMDB_API_KEY}
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=${AUTH_URL:-http://localhost:8000}
      - NEXT_PUBLIC_APP_NAME=Egfilm
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL:-http://localhost:8000}
      - NEXT_PUBLIC_BLOG_URL=${NEXT_PUBLIC_BLOG_URL:-https://blog.egfilm.xyz}
      - NEXT_PUBLIC_UMAMI_WEBSITE_ID=${NEXT_PUBLIC_UMAMI_WEBSITE_ID}
      - NEXT_PUBLIC_UMAMI_SCRIPT_URL=${NEXT_PUBLIC_UMAMI_SCRIPT_URL}
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - main-network
    deploy:
      resources:
        limits:
          cpus: '0.6'
          memory: 768M
        reservations:
          cpus: '0.3'
          memory: 384M
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  main-network:
    driver: bridge